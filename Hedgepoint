<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Hedgepoint — Cards por CSV (Carousel)</title>
  <style>
    :root{--hp-orange:#ED8B00;--hp-blue:#272259;--hp-white:#fff;--hp-bg:#0f0f12;--hp-card:#12141a}
    *{box-sizing:border-box}
    body{margin:0;background:var(--hp-bg);color:var(--hp-white);font-family:Montserrat,Arial,Helvetica,sans-serif}
    .hp-wrap{max-width:1120px;margin:28px auto;padding:0 16px}

    /* Carousel */
    .hp-carousel{position:relative}
    .hp-viewport{overflow:hidden;border:2px solid var(--hp-blue)}
    .hp-track{display:flex;transition:transform .6s ease;will-change:transform}
    .hp-slide{flex:0 0 100%}

    /* Nav arrows (pontudas) */
    .hp-nav{position:absolute;top:50%;transform:translateY(-50%);border:none;background:transparent;cursor:pointer;padding:0}
    .hp-nav:focus-visible{outline:2px solid var(--hp-orange)}
    .hp-nav svg{width:44px;height:44px;fill:rgba(255,255,255,.9);filter:drop-shadow(0 2px 6px rgba(0,0,0,.6))}
    .hp-prev{left:8px}
    .hp-next{right:8px}

    /* Dots */
    .hp-dots{display:flex;gap:8px;justify-content:center;margin:10px 0 0}
    .hp-dot{width:12px;height:12px;border:2px solid #fff;background:transparent;cursor:pointer}
    .hp-dot.active{background:var(--hp-orange);border-color:var(--hp-orange)}

    /* Card (sem cantos arredondados) */
    .hp-card{border:1.5px solid var(--hp-blue);background:var(--hp-card);display:flex;flex-direction:column;height:100%}
    .hp-head{display:flex;align-items:center;justify-content:space-between;padding:10px 12px;border-bottom:1.5px solid #1c2030}
    .hp-pill{padding:2px 8px;border:1.5px solid var(--hp-orange);font-size:11px;letter-spacing:.02em;text-transform:uppercase}
    .hp-veh{font-size:12px;color:#c8c8c8}
    .hp-body{padding:12px}
    .hp-title{margin:0 0 10px 0;line-height:1.3}
    .hp-title a{color:#fff;text-decoration:none;border-bottom:2px solid transparent}
    .hp-title a:hover{border-color:var(--hp-orange)}
    .hp-exp{margin-top:auto;display:flex;align-items:center;gap:10px;padding:12px;border-top:1.5px solid #1c2030;background:linear-gradient(0deg,#0b0d12,#0f1117)}
    .hp-exp img{width:44px;height:44px;object-fit:cover;border:2px solid var(--hp-blue)}
    .hp-who{display:flex;flex-direction:column}
    .hp-name{font-weight:700}
    .hp-role{font-size:12px;color:#c8c8c8}
    @media (max-width:720px){.hp-role{display:none}}
  </style>
</head>
<body>
  <div class="hp-wrap">
    <div class="hp-carousel" aria-roledescription="carousel" aria-label="Notícias com especialista">
      <button class="hp-nav hp-prev" id="hpPrev" aria-label="Anterior">
        <svg viewBox="0 0 24 24" aria-hidden="true"><path d="M15.5 3 5 12l10.5 9 1.5-1.8L8.7 12 17 4.8z"/></svg>
      </button>
      <div class="hp-viewport">
        <div class="hp-track" id="hpTrack" role="group" aria-live="polite"></div>
      </div>
      <button class="hp-nav hp-next" id="hpNext" aria-label="Próximo">
        <svg viewBox="0 0 24 24" aria-hidden="true"><path d="M8.5 3 19 12l-10.5 9-1.5-1.8L15.3 12 7 4.8z"/></svg>
      </button>
    </div>
    <div class="hp-dots" id="hpDots" aria-hidden="true"></div>
  </div>

  <script>
  // ===== CONFIG =====
  const CONFIG = {
    // Seu CSV público (Google Sheets → Publicar como CSV)
    CSV_URL: 'https://docs.google.com/spreadsheets/d/e/2PACX-1vQEVY2tjAstOUFhopJ05zJoPq1l979hSuc2N01pF4v8nEdm4EKk7p08A2X1adlyBcxTEgIvNJxz574g/pub?gid=1592806276&single=true&output=csv',

    // Especialistas por tema canônico (com fotos do HubSpot)
    SPECIALISTS: {
      'café':        { name:'Laleska Moda',    role:'Analista de Inteligência de Mercado',         photo:'https://9334756.fs1.hubspotusercontent-na1.net/hubfs/9334756/Mkt%20Intell%20-%20Seta%20laranja/Laleska%20Moda.png' },
      'oleaginosas': { name:'Thais Italiani',  role:'Gerente de Inteligência de Mercados',         photo:'https://9334756.fs1.hubspotusercontent-na1.net/hubfs/9334756/Mkt%20Intell%20-%20Seta%20laranja/Thais%20Italiani.png' },
      'cacau':       { name:'Carolina França', role:'Analista Sênior de Inteligência de Mercado',  photo:'https://9334756.fs1.hubspotusercontent-na1.net/hubfs/9334756/Mkt%20Intell%20-%20Seta%20laranja/Carol%20Fran%C3%A7a.png' },
      'açúcar':      { name:'Lívea Coda',      role:'Coordenadora de Inteligência de Mercado',     photo:'https://9334756.fs1.hubspotusercontent-na1.net/hubfs/9334756/Mkt%20Intell%20-%20Seta%20laranja/L%C3%ADvea%20Coda.png' },
      'grãos':       { name:'Luiz Roque',      role:'Coordenador de Inteligência de Mercado',      photo:'https://9334756.fs1.hubspotusercontent-na1.net/hubfs/9334756/Mkt%20Intell%20-%20Seta%20laranja/Luiz%20Roque.png' }
    },

    // UTMs automáticas (opcional)
    UTM:{enabled:true, source:'news-cards', medium:'referral', campaign:'press-mentions'},

    // Filtros (Tier 1 ativado + ano 2025 por padrão)
    FILTERS:{
      year: 2025,         // defina para null para não filtrar por ano
      years: [],          // ou use múltiplos anos: [2024,2025]
      tier1Only: true,    // <- ATIVADO
      tier1List: [
        'Valor Econômico','Estadão','Folha de S.Paulo','O Globo','Agência Estado',
        'Reuters','Bloomberg','Financial Times'
      ]
    }
  };

  // ===== Utils =====
  const strip=s=>(s||'').normalize('NFD').replace(/[\u0300-\u036f]/g,'');
  const lower=s=>strip(String(s||'')).toLowerCase();
  const vehCanon=s=>lower(s).replace(/[^\w]+/g,' ').trim();
  let TIER1_SET=new Set((CONFIG.FILTERS.tier1List||[]).map(vehCanon));

  function themeOf(raw){
    const s=lower(raw);
    if(/(soja|oleagin|canola|girassol|sunflower|colza)/.test(s)) return 'oleaginosas';
    if(/(milho|corn|trigo|wheat|sorgo|grao|gr[ãa]os)/.test(s))   return 'grãos';
    if(/(cafe|coffee|arabica|robusta)/.test(s))                 return 'café';
    if(/(acucar|a[cç]ucar|sugar|etanol|ethanol|cana)/.test(s))  return 'açúcar';
    if(/(cacau|cocoa|chocolate)/.test(s))                       return 'cacau';
    return 'grãos';
  }
  const specOf=t=>CONFIG.SPECIALISTS[t]||CONFIG.SPECIALISTS['grãos'];

  function withUTM(url){
    if(!url||!CONFIG.UTM.enabled) return url;
    try{
      const u=new URL(url);
      if(!u.searchParams.get('utm_source')) u.searchParams.set('utm_source',CONFIG.UTM.source);
      if(!u.searchParams.get('utm_medium')) u.searchParams.set('utm_medium',CONFIG.UTM.medium);
      if(!u.searchParams.get('utm_campaign')) u.searchParams.set('utm_campaign',CONFIG.UTM.campaign);
      return u.toString();
    }catch{ return url }
  }

  // Parse data dd/mm/aaaa ou ISO
  function parseDateFlexible(s){
    if(!s) return null; s=String(s).trim();
    let d=new Date(s); if(!isNaN(d)) return d;
    const m=s.match(/^(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{2,4})$/);
    if(m){
      const dd=+m[1], mm=+m[2], yy=m[3].length===2?2000+(+m[3]):+m[3];
      d=new Date(yy, mm-1, dd);
      if(!isNaN(d)) return d;
    }
    return null;
  }

  // CSV parser simples com aspas
  function parseCSV(text){
    const rows=[], re=/\s*(?:"([^"]*(?:""[^"]*)*)"|([^,]*))\s*(,|\n|\r|$)/g; let m,row=[];
    text=text.replace(/\r\n/g,'\n').replace(/\r/g,'\n');
    while((m=re.exec(text))){ const v=m[1]?m[1].replace(/""/g,'"'):m[2]; row.push(v); const sep=m[3]; if(sep==='\n'||sep===''){rows.push(row);row=[];} }
    if(row.length) rows.push(row);
    const [h,...data]=rows; if(!h) return [];
    const idx={}; h.forEach((x,i)=>idx[lower(x)]=i);
    return data.map(r=>({
      titulo:    r[idx['titulo']] ?? r[idx['nome da noticia']] ?? r[idx['nome da notícia']] ?? r[0],
      veiculo:   r[idx['veiculo']] ?? r[idx['veículo']] ?? r[1],
      data:      r[idx['datapublicacao']] ?? r[idx['data']] ?? '',
      commodity: r[idx['commodity']] ?? r[idx['categoria']] ?? r[idx['tema']] ?? r[2],
      url:       r[idx['url']] ?? r[idx['link']] ?? r[3],
      // escopo (nacional/internacional) é ignorado
    })).filter(x=>x.titulo && (x.url||x.veiculo));
  }

  function dedup(list){
    const su=new Set(), st=new Set();
    return list.filter(it=>{
      let ok=true;
      if(it.url){ const k=lower(it.url.replace(/^https?:\/\//,'')); if(su.has(k)) ok=false; else su.add(k); }
      const k2=lower(it.titulo); if(st.has(k2)) ok=false; else st.add(k2);
      return ok;
    });
  }

  // ===== Filters =====
  function allowedByYear(row){
    const y=CONFIG.FILTERS.year, ys=CONFIG.FILTERS.years;
    if(!y && !(Array.isArray(ys)&&ys.length)) return true;
    const d=parseDateFlexible(row.data); if(!d) return false;
    const yy=d.getFullYear();
    if(y) return yy===y;
    return ys.includes(yy);
  }
  function allowedByTier1(row){
    if(!CONFIG.FILTERS.tier1Only) return true;
    return TIER1_SET.has(vehCanon(row.veiculo||''));
  }
  function applyFilters(rows){ return rows.filter(r=>allowedByYear(r) && allowedByTier1(r)); }

  const fmtDate=s=>{ const d=parseDateFlexible(s); return d? d.toLocaleDateString('pt-BR') : (s||''); };

  // ===== Render =====
  function cardHTML(row){
    const theme=themeOf(row.commodity), sp=specOf(theme), link=row.url?withUTM(row.url):null, date=fmtDate(row.data);
    return `<article class="hp-card">
      <div class="hp-head"><span class="hp-pill">${theme.toUpperCase()}</span><span class="hp-veh">${row.veiculo||''}${date?` • ${date}`:''}</span></div>
      <div class="hp-body"><h3 class="hp-title">${link?`<a href="${link}" target="_blank" rel="noopener">${row.titulo}</a>`:row.titulo}</h3></div>
      <div class="hp-exp"><img src="${sp.photo}" alt="${sp.name}"><div class="hp-who"><span class="hp-name">${sp.name}</span><span class="hp-role">${sp.role}</span></div></div>
    </article>`;
  }

  // ===== Carousel =====
  const track=document.getElementById('hpTrack');
  const dots=document.getElementById('hpDots');
  const prevBtn=document.getElementById('hpPrev');
  const nextBtn=document.getElementById('hpNext');
  let items=[], perView=1, index=0, autoTimer=null; const AUTO_MS=6000;

  function computePerView(){ return window.innerWidth>=1024?3:(window.innerWidth>=720?2:1); }
  function applyPerView(){
    perView=computePerView();
    document.querySelectorAll('.hp-slide').forEach(sl=>{ sl.style.flexBasis=(100/perView)+'%'; });
    buildDots(); update();
  }
  function buildDots(){
    const pages=Math.max(1, Math.ceil(items.length/perView));
    dots.innerHTML=Array.from({length:pages}, (_,i)=>`<button class="hp-dot${i===Math.floor(index/perView)?' active':''}" data-i="${i}"></button>`).join('');
  }
  function update(){ track.style.transform=`translateX(-${(index*(100/perView))}%)`; highlightDot(); }
  function highlightDot(){ const page=Math.floor(index/perView); [...dots.children].forEach((d,i)=>d.classList.toggle('active', i===page)); }
  function go(i){ index=(i+items.length)%items.length; update(); }
  function next(){ if(index<Math.max(0,items.length-1)) go(index+1); else go(0); }
  function prev(){ if(index>0) go(index-1); else go(Math.max(0,items.length-1)); }
  function startAuto(){ stopAuto(); if(items.length>perView) autoTimer=setInterval(next, AUTO_MS); }
  function stopAuto(){ if(autoTimer){ clearInterval(autoTimer); autoTimer=null; } }

  prevBtn.addEventListener('click', ()=>{ prev(); startAuto(); });
  nextBtn.addEventListener('click', ()=>{ next(); startAuto(); });
  dots.addEventListener('click', e=>{ const b=e.target.closest('button.hp-dot'); if(!b) return; go(Number(b.dataset.i)*perView); startAuto(); });
  document.querySelector('.hp-carousel').addEventListener('mouseenter', stopAuto);
  document.querySelector('.hp-carousel').addEventListener('mouseleave', startAuto);
  window.addEventListener('resize', ()=>{ const old=perView, nv=computePerView(); if(nv!==old) applyPerView(); });
  document.addEventListener('keydown', e=>{ if(e.key==='ArrowLeft') prev(); if(e.key==='ArrowRight') next(); });

  async function load(){
    try{
      const res=await fetch(CONFIG.CSV_URL,{cache:'no-store'}); const txt=await res.text();
      items=applyFilters(dedup(parseCSV(txt)));
      track.innerHTML=items.map(r=>`<div class="hp-slide">${cardHTML(r)}</div>`).join('');
      applyPerView(); index=0; update(); startAuto();
    }catch(e){
      track.innerHTML='<div style="padding:18px;border:1.5px dashed #2a2d36;color:#9ca3af">Falha ao carregar CSV.</div>';
      console.warn('Falha ao carregar CSV', e);
    }
  }

  // API opcional (mudar filtros sem re-embedar)
  window.HP = {
    setCSV:u=>{CONFIG.CSV_URL=u; load();},
    setFilterYear:y=>{CONFIG.FILTERS.year=y; CONFIG.FILTERS.years=[]; load();},
    clearFilterYear:()=>{CONFIG.FILTERS.year=null; CONFIG.FILTERS.years=[]; load();},
    setTier1Only:b=>{CONFIG.FILTERS.tier1Only=!!b; load();},
    setTier1List:list=>{CONFIG.FILTERS.tier1List=Array.isArray(list)?list:[]; TIER1_SET=new Set(CONFIG.FILTERS.tier1List.map(vehCanon)); load();}
  };

  load();
  </script>
</body>
</html>
